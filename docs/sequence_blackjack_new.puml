@startuml
start
:ルームの作成;
:ルームに参加;
:締め切り;
:スタート;
:カードシャッフル;
:（全員）ベット金額の確定;
:(-) ベット金額を所持金から減算;
:カードを配る;
:オープンカードの決定;
:手番プレイヤーの確定;
if (親のオープンカードがA) then (yes)
    while (全プレイヤーが行動を選択)
        :手番プレイヤー (インシュアランス) 行動決定;
        if (インシュアランスを選択) then (yes)
            :プレイヤーのダウン(インシュアランス);
            :(+) 該当プレイヤーのベット金額の半分を加算;
        else (no)
            :(0) 該当プレイヤーのベット金額をそのままにする;
        endif
    endwhile
    if (親がブラックジャック) then (yes)
        :残っているプレイヤーの負け判定;
        :(0) Notインシュアランスプレイヤーのベット金額の全額を減算;
        :(+bet) インシュアランスプレイヤーの掛け金を加算;
        :ゲーム終了;
        stop
    else (no)
        :次の手番プレイヤーの確定;
    endif
else (no)
    :スキップ;
endif
:手番プレイヤーの確定;
repeat
    :プレイヤーの手番開始(通常);
    if (プレイヤーがプレイ可能) then (yes)
        while (プレイヤーがプレイ可能である)
            :プレイヤーの行動決定;
            if (プレイヤーがHit) then (yes)
                :プレイヤーのカード枚数+1;
                if (プレイヤーのカードの合計値が22以上) then (yes)
                    :(0) 該当プレイヤーのベット金額を減算;
                    break
                else (no)
                    :プレイヤーは再度行動可能;
                endif
            elseif (プレイヤーがStand) then (yes)
                :プレイヤーの手役確定;
                break
            elseif (プレイヤーが"ベット金額を保持"している && プレイヤーがDouble) then (yes)
                :プレイヤーのカード枚数+1;
                :プレイヤーの所持金 -= プレイヤーの掛け金
                プレイヤーの掛け金 += プレイヤーの掛け金;
                if (プレイヤーのカードの合計値が22以上) then (yes)
                    :(0) 該当プレイヤーのベット金額を減算;
                    :プレイヤーの手役確定;
                    break
                else (no)
                    break
                endif
            elseif (プレイヤーがdown) then (yes)
                :(+) 該当プレイヤーのベット金額の半額を加算;
                break
            endif
        endwhile
    else (no)
        break
    endif
repeat while (次のプレイヤーの手番へ)
@enduml